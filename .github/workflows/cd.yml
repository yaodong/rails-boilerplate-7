name: CD

on:
  push:
    branches:
      - release/*

jobs:
  ci:
    name: CI
    uses: ./.github/workflows/ci.yml

  release:
    runs-on: ubuntu-latest
    needs:
      - ci

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Setup SSH Keys
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY }}

      - name: Get current IP
        id: get_ip
        run: echo "current_ip=$(curl -s https://api.ipify.org)" >> $GITHUB_OUTPUT

      - name: Add current IP to the firewall on DigitalOcean
        run: |
          doctl compute firewall add-rules ${{ vars.DIGITALOCEAN_FIREWALL_ID }} \
            --inbound-rules protocol:tcp,ports:22,address:${{ steps.get_ip.outputs.current_ip }}/32

      - name: Pull a list of droplets to a host file
        run: |
          ip_list=$(doctl compute droplet list --format PublicIPv4 --no-header \
                --tag-name ${{ vars.DIGITALOCEAN_DROPLET_TAG }})
          echo "" > config/hosts.txt
          while read -r ip; do
            echo "$ip" >> config/hosts.txt
          done <<< "$ip_list"

      - name: Generate deployment manifest
        run: bin/kamal-manifest

      - name: Run Kamal Deploy
        env:
          # Deployment secrets
          DOCKER_REGISTRY_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          # Runtime secrets
          RAILS_ENV: production
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          RAILS_PRIMARY_DATABASE_URL: ${{ secrets.RAILS_PRIMARY_DATABASE_URL }}
          RAILS_QUEUE_DATABASE_URL: ${{ secrets.RAILS_QUEUE_DATABASE_URL }}
          REDIS_URL: ${{ secrets.RAILS_REDIS_URL }}
          POSTMARK_API_TOKEN: ${{ secrets.POSTMARK_API_TOKEN }}
        run: bundle exec kamal setup

      - name: Release Kamal lock
        if: always()
        run: bundle exec kamal lock release

      - name: Remove current IP from the firewall on DigitalOcean
        if: always()
        run: |
          doctl compute firewall remove-rules ${{ vars.DIGITALOCEAN_FIREWALL_ID }} \
            --inbound-rules protocol:tcp,ports:22,address:${{ steps.get_ip.outputs.current_ip }}/32
